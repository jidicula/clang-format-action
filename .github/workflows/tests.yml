# This callable workflow is called from separate workflows for each Ubuntu
# runner version. We use separate workflows for runner version rather than a
# matrix to allow creating status badges for each runner version.
name: Tests

on:
  workflow_call:
    inputs:
      runner-os:
        required: true
        type: string

defaults:
  run:
    shell: bash

jobs:
  test:
    name: ${{ inputs.runner-os }}-clang-format-${{ matrix.clang-format-version }}
    runs-on: ${{ inputs.runner-os }}
    strategy:
      fail-fast: false
      matrix:
        clang-format-version:
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
    steps:
    - uses: actions/checkout@v4
    - name: Build and test the Docker image
      run: test/test.sh ${{ matrix.clang-format-version }}
  e2e:
    name: E2E ${{ inputs.runner-os }}-clang-format-${{ matrix.clang-format-version }}-${{ matrix.path['check'] }}
    runs-on: ${{ inputs.runner-os }}
    strategy:
      fail-fast: false
      matrix:
        clang-format-version:
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          - 13
          - 14
          - 15
          - 16
        path:
          - check: 'test/known_fail'
            exclude: 'capi'
            known_fail: true
          - check: 'test/known_pass'
            exclude: 'capi'
            known_fail: false
    steps:
      - uses: actions/checkout@v4
      - name: Run clang-format style check for C/C++ programs.
        id: check
        uses: ./../clang-format-action
        continue-on-error: ${{ matrix.path['known_fail'] }}
        with:
          check-path: ${{ matrix.path['check'] }}
          clang-format-version: ${{ matrix.clang-format-version }}
          exclude-regex: ${{ matrix.path['exclude'] }}
      - name: Incorrect success on known-fail test
        if: ${{ steps.check.outcome == 'success' && matrix.path['known_fail'] }}
        run: exit 1
